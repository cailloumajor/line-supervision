name: Go module CI

on:
  push:
    branches:
      - master
    paths:
      - "web/server/**"
      - "web/Dockerfile"
      - ".github/workflows/go.yml"
  pull_request:
    branches:
      - master
    paths:
      - "web/server/**"
      - "web/Dockerfile"
      - ".github/workflows/go.yml"

env:
  SUBDIR: web/server

jobs:
  lint:
    name: Lint Go code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          working-directory: ${{ env.SUBDIR }}
  test:
    name: Test and code coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Go version from Dockerfile
        id: get-go-version
        run: echo "::set-output name=GO_VERSION::$(grep -oP 'FROM golang:\K[\d.]+' web/Dockerfile)"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.get-go-version.outputs.GO_VERSION }}
      - name: Test
        run: |
          cd "$SUBDIR"
          go test -coverprofile cover.out -race -v
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
          file: ${{ env.SUBDIR }}/cover.out
          flags: go-unittests
          fail_ci_if_error: true
